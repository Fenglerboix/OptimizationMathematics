git init ---estando en la ruta y la carpeta se debe llamar igual al repo, el repo debe estar vacio
git add . --nuevos archivos que tengo en local
git commit -m "first commit"
git remote add origin https://github.com/Fenglerboix/OptimizationMathematics.git
git push -u origin master


/mnt/c/Users/jherrera.INGENEO/Desktop

#Guardar usuario y contraseña en la maquina
git config --global --add user.email "you@example.com"
o
git config --global --add user.name "Your Name"

# Siempre puedes curiosear con lo existente en la configuración...
git config --global --list
 
# Primero, elimina el usuario actual (nombre y correo).
git config --global --unset-all user.name
git config --global --unset-all user.email

#crear a partir de archivos locales, se debe nombrar igual a como tengo en local la carpeta, y en git hub debe estar vacia
git remote add origin https://github.com/Fenglerboix/CustomerMangerSystem.git

#clonar repo
git clone https://github.com/Fenglerboix/CustomerMangerSystem.git

--hacer commit
git add .
git commit -m "all changes upload at repo"
dos en uno: (Mala practica) git commit -a -m "message ..."


--mandar mis cambios al repo
git push -u origin master

--crear rama y cambiarme inmediatamente a ella
git branch issueExample
git checkout issueExample

--los dos comandos anteriores en uno
git checkout -b issueExample

--borrar rama
git branch -d issueExample

--mezclar cambios
--subo los cambios a la rama
git commit -a -m "changes"
git push -u origin HotFix
git checkout master
--desde aqui tiro el merge 
git merge HotFix

--mirar log del repo
git log --decorate --graph --all --oneline //sin el oneline interesante

halar cambios
git pull origin master

diferencias
git diff <branch> <master>
git diff --ver cambios de mi local al del server

##buscar todo lo que se a cambiado en el repo
git fetch origin

##hacer stash
git stash //cuando se pone asi esto es equivalente a git push
git stash apply //para traer en stash guardado
git stash list //para ver los stash
git stash show

